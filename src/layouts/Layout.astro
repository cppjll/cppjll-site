---
import "../global.css";
import Footer from "../components/Footer.astro";
import icon from "/favicon.ico";
import bun from "../images/bun.png";
import { ViewTransitions } from "astro:transitions";
import Navbar from "@/components/Navbar.astro";
const { title } = Astro.props;
---

<html lang="en" class="bg-background">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="description"
      content="Cal Poly Pomona's Japanese Learning Club"
    />
    <link rel="icon" href={icon} type="image/x-icon" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=DM+Sans&family=DM+Serif+Display&display=swap"
    />
    <title>{title}</title>
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content="Cal Poly Pomona's Japanese Learning Club. Learn Japanese with fellow Broncos."
    />
    <meta property="og:image" content={bun.src} />
    <meta name="theme-color" content="#204063" />
    <ViewTransitions />
    <script
      src="https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js"
    ></script>
    <!-- Cloudflare Web Analytics -->
    <script
      defer
      src="https://static.cloudflareinsights.com/beacon.min.js"
      data-cf-beacon='{"token": "3882184c8c9f429bb3bb04e4f5b4b669"}'></script>
    <!-- End Cloudflare Web Analytics -->
    <script is:inline>
      function setDarkMode(document) {
        const getThemePreference = () => {
          if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
          ) {
            return localStorage.getItem("theme");
          }
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "theme-light";
        };
        const isDark = getThemePreference() === "dark";
        document.documentElement.classList[isDark ? "add" : "remove"]("dark");

        if (typeof localStorage !== "undefined") {
          const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "theme-light");
          });
          observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
          });
        }
      }

      setDarkMode(document);

      document.addEventListener("astro:before-swap", (ev) => {
        // Pass the incoming document to set the theme on it
        setDarkMode(ev.newDocument);
      });
    </script>
  </head>
  <body>
    <Navbar />
    <slot />
    <Footer />
  </body>
</html>
